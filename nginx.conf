worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    lua_code_cache off;
    lua_package_path "/usr/local/openresty/lualib/?.lua;;";

    server {
        listen 80;
        server_name _;

        location /stream/ {
            default_type text/plain;
            content_by_lua_block {
                local sqlite3 = require("lsqlite3")
                local db = sqlite3.open("/var/www/html/urls.db")

                local url = ngx.var.arg_url
                if not url then
                    ngx.say("Error: No URL provided")
                    return
                end

                -- ตรวจสอบว่ามีลิงก์นี้ในฐานข้อมูลแล้วหรือไม่
                local stmt = db:prepare("SELECT converted FROM urls WHERE original = ?")
                stmt:bind_values(url)
                local result = stmt:step()
                local converted_url = nil

                if result == sqlite3.ROW then
                    converted_url = stmt:get_value(0)  -- ดึงค่าที่เคยแปลง
                else
                    -- สร้างลิงก์ใหม่
                    local unique_id = os.time() .. math.random(1000, 9999)
                    local filename = unique_id .. ".m3u8"
                    local hls_path = "/var/www/html/hls/" .. filename

                    os.execute("wget -q -O " .. hls_path .. " " .. url)

                    converted_url = "https://docker-ryg4.onrender.com/hls/" .. filename

                    -- บันทึกลงฐานข้อมูล
                    local insert_stmt = db:prepare("INSERT INTO urls (original, converted) VALUES (?, ?)")
                    insert_stmt:bind_values(url, converted_url)
                    insert_stmt:step()
                    insert_stmt:finalize()
                end
                
                stmt:finalize()
                db:close()
                
                ngx.say(converted_url)
            }
        }

        location /hls/ {
            root /var/www/html;
            autoindex on;
        }
    }
}
